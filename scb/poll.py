"""–û–ø—Ä–æ—Å –æ –∫–∞—á–µ—Å—Ç–≤–µ —Å–Ω–∞."""
from datetime import date

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Message
from telegram.ext import CallbackContext

from scb.google import add_row_to_sheet
from scb.today import build_today_message


def smile(polls, index):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Ç–∫—É-—Å–º–∞–π–ª–∏–∫ –∫ –≤–∞—Ä–∏–∞–Ω—Ç—É –æ–ø—Ä–æ—Å–∞.

    Parameters:
        polls: –ú–∞—Å—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ–ø—Ä–æ—Å–∞
        index: –ò–Ω–¥–µ–∫—Å –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

    Returns:
        –ó–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–º–∞–π–ª–∏–∫–æ–º.
    """
    return [
        f'üòÉ {polls[0]}',
        f'üòè {polls[1]}',
        f'üòí {polls[2]}',
        f'üò° {polls[3]}',
    ][index]


def build_keyboard(polls):
    """–°–±–æ—Ä–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Å—á–µ—Ç—á–∏–∫–æ–≤.

    Parameters:
        polls: –°—á–µ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    Returns:
        –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏—Å—Ç–µ–≥–Ω—É—Ç–æ–π –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø–∞–Ω–µ–ª–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    return InlineKeyboardMarkup([[
        InlineKeyboardButton(text=smile(polls, 0), callback_data='5'),
        InlineKeyboardButton(text=smile(polls, 1), callback_data='4'),
        InlineKeyboardButton(text=smile(polls, 2), callback_data='3'),
        InlineKeyboardButton(text=smile(polls, 3), callback_data='2'),
    ]])


def build_end_message(polls):
    """–°–±–æ—Ä–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –æ–ø—Ä–æ—Å–∞.

    Parameters:
        polls: –°—á–µ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    Returns:
        –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—É—â–∏–º–∏ —Å—á–µ—Ç—á–∏–∫–∞–º–∏ –∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è.
    """
    today = f'\n\n{build_today_message()}.'
    wishes = '\n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!'
    stats_indexes = list(range(4))
    stats_list = map(lambda index: smile(polls, index), stats_indexes)
    stats = ' '.join(stats_list)

    return f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–Ω–∞:\n{stats}{today}{wishes}'


def update_polls(polls, answer):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ—Ç–≤–µ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Parameters:
        polls: –°—á–µ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        answer: –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        –ù–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Å—á–µ—Ç—á–∏–∫–æ–≤.
    """
    return [
        polls[0] + 1 if answer == '5' else polls[0],
        polls[1] + 1 if answer == '4' else polls[1],
        polls[2] + 1 if answer == '3' else polls[2],
        polls[3] + 1 if answer == '2' else polls[3],
    ]


def stop_poll(context: CallbackContext):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–ø—Ä–æ—Å–∞ - —É–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∏ –æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.

    Parameters:
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç (–ø–∞–º—è—Ç—å) –±–æ—Ç–∞

    """
    # TODO –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ poll —Ä–∞–Ω–µ–µ —Å–æ—Å—Ç–æ—è–ª—Å—è
    context.bot.delete_message(
        chat_id=context.bot_data['poll_chat_id'],
        message_id=context.bot_data['poll_message_id'],
    )
    context.bot.send_message(
        chat_id=context.bot_data['poll_chat_id'],
        text=build_end_message(context.bot_data['poll_counters']),
    )
    context.bot_data.update({
        'poll_counters': None,
        'poll_chat_id': None,
        'poll_message_id': None,
        'poll_answered': None,
    })


def poll(context: CallbackContext):
    """–í—ã–≤–æ–¥ –æ–ø—Ä–æ—Å–∞ –≤ —á–∞—Ç.

    Parameters:
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç (–ø–∞–º—è—Ç—å) –±–æ—Ç–∞

    """
    channel_id = context.bot_data['config']['CHAT']
    polls = [0, 0, 0, 0]
    keyboard = build_keyboard(polls)
    question = '–ö–∞–∫ —Å–ø–∞–ª–æ—Å—å?'
    message: Message = context.bot.send_message(
        channel_id,
        text=question,
        reply_markup=keyboard,
    )
    context.bot_data.update({
        'poll_counters': polls,
        'poll_chat_id': message.chat_id,
        'poll_message_id': message.message_id,
    })


def write_poll(context: CallbackContext, user_id, user_name, answer):
    """–ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É.

    Parameters:
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç (–ø–∞–º—è—Ç—å) –±–æ—Ç–∞
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_name: –ü–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        answer: –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    """
    sheet_id = context.bot_data['config']['SHEET_ID']
    table_name = context.bot_data['config']['TABLE_NAME']
    cells_range = 'A2:E'
    row = [
        date.today().isoformat(),
        user_id,
        user_name,
        answer,
    ]
    add_row_to_sheet(sheet_id, cells_range, table_name, row)
